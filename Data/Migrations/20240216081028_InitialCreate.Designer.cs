// <auto-generated />
using System;
using Class13.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Class13.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240216081028_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Class13.Domain.GoalsE", b =>
                {
                    b.Property<Guid>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoalCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProficiencyId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("completionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("creationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isCompleted")
                        .HasColumnType("int");

                    b.HasKey("GoalId");

                    b.HasIndex("ProficiencyId");

                    b.HasIndex("TaskId");

                    b.ToTable("GoalsE");

                    b.HasData(
                        new
                        {
                            GoalId = new Guid("7500dd79-bf27-43db-a329-6ada5fbb4129"),
                            GoalCondition = "Finish Text",
                            GoalDescription = "Practice reading",
                            GoalName = "Read English text",
                            ProficiencyId = new Guid("d7e9c485-22f9-49bc-9ca0-b07730a040c5"),
                            TaskId = new Guid("0179fed6-7ff9-44b4-b017-3eaf9368350b"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            GoalId = new Guid("1aae8ba5-0251-4845-9f3f-bba4779189fb"),
                            GoalCondition = "Understand conversations",
                            GoalDescription = "Practice listening",
                            GoalName = "Improve Listening",
                            ProficiencyId = new Guid("d7e9c485-22f9-49bc-9ca0-b07730a040c5"),
                            TaskId = new Guid("0179fed6-7ff9-44b4-b017-3eaf9368350b"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        });
                });

            modelBuilder.Entity("Class13.Domain.MilestonesE", b =>
                {
                    b.Property<Guid>("IdMilestone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompletionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GoalId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuccessCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isCompleted")
                        .HasColumnType("int");

                    b.HasKey("IdMilestone");

                    b.HasIndex("GoalId");

                    b.ToTable("MilestonesE");

                    b.HasData(
                        new
                        {
                            IdMilestone = new Guid("476d5695-d378-47a9-9c11-0915715355c7"),
                            CompletionDate = "",
                            Description = "Practice listening",
                            GoalId = new Guid("1aae8ba5-0251-4845-9f3f-bba4779189fb"),
                            Name = "Watch movie in English",
                            SuccessCondition = "Understand Movie Dialog",
                            isCompleted = 0
                        });
                });

            modelBuilder.Entity("Class13.Domain.ProficienciesE", b =>
                {
                    b.Property<Guid>("IdProficiency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProficiency");

                    b.ToTable("ProficienciesE");

                    b.HasData(
                        new
                        {
                            IdProficiency = new Guid("d7e9c485-22f9-49bc-9ca0-b07730a040c5"),
                            Level = "Initial"
                        },
                        new
                        {
                            IdProficiency = new Guid("996eaabc-809b-4ba7-861e-5fd6de533b93"),
                            Level = "Medium"
                        },
                        new
                        {
                            IdProficiency = new Guid("86bccc4f-7f23-4074-93e7-258e7faeceaf"),
                            Level = "Expert"
                        });
                });

            modelBuilder.Entity("Class13.Domain.TaskE", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("completionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("creationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isCompleted")
                        .HasColumnType("int");

                    b.HasKey("TaskId")
                        .HasName("PK_Authors_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("38c3aa57-0e9f-467f-8e16-493cf4962a4f"),
                            TaskDescription = "Desc 1",
                            TaskName = "Task 1",
                            UserId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("0179fed6-7ff9-44b4-b017-3eaf9368350b"),
                            TaskDescription = "Improve your english from start",
                            TaskName = "English",
                            UserId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("884886da-e2d0-43b1-875b-28c27ce8cc6b"),
                            TaskDescription = "Improve your task",
                            TaskName = "Math 2",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("04a973b1-8bcf-4a7b-ac72-2ee6696ed3a1"),
                            TaskDescription = "Improve your task",
                            TaskName = "Math 3",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("954127e0-e993-4955-8866-e7a7764da7e6"),
                            TaskDescription = "Improve your task",
                            TaskName = "Math 4",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("9c2f40e9-b323-4cbe-91aa-ee8d5b884755"),
                            TaskDescription = "Improve your task",
                            TaskName = "Calculus",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("452df5d2-190e-43ab-b37f-708887fed430"),
                            TaskDescription = "Improve your task",
                            TaskName = "Calculus 2",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("ab46b282-92c1-4745-a3e9-9316d3d92209"),
                            TaskDescription = "Improve your task",
                            TaskName = "Calculus 3",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("6f965003-fe46-40cd-8212-00a23f7d078e"),
                            TaskDescription = "Improve your task",
                            TaskName = "Calculus 4",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("9f68d19b-4742-4f50-9233-98498315cd06"),
                            TaskDescription = "Improve your task",
                            TaskName = "Gym Routine",
                            UserId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("cf01895c-c97b-4924-a32c-032550d78dfc"),
                            TaskDescription = "Improve your task",
                            TaskName = "Chore list",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("c9c1c635-5f2e-45e1-a979-c10ab8d77d08"),
                            TaskDescription = "Improve your task",
                            TaskName = "Fix Procastrination",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("32be2947-3aeb-499e-8449-0396c5407f70"),
                            TaskDescription = "Improve your task",
                            TaskName = "Cooking",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("36879055-294b-42e3-9db2-88792d34c1df"),
                            TaskDescription = "Improve your task",
                            TaskName = "Cooking 2",
                            UserId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        },
                        new
                        {
                            TaskId = new Guid("3e0735d4-cbaa-44a2-a013-59326fed788b"),
                            TaskDescription = "Improve your task",
                            TaskName = "French",
                            completionDate = "",
                            creationDate = "16-02-2024",
                            isCompleted = 0
                        });
                });

            modelBuilder.Entity("Class13.Domain.UsersE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserE");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            Email = "user1@gmail.com",
                            FirstName = "first",
                            LastName = "last",
                            Password = "password"
                        },
                        new
                        {
                            Id = new Guid("be9d19ec-8903-45b9-84dd-9857c5c5e220"),
                            Email = "user2@gmail.com",
                            FirstName = "second",
                            LastName = "last",
                            Password = "password"
                        });
                });

            modelBuilder.Entity("Class13.Domain.GoalsE", b =>
                {
                    b.HasOne("Class13.Domain.ProficienciesE", "Proficiency")
                        .WithMany("Goals")
                        .HasForeignKey("ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Class13.Domain.TaskE", "Task")
                        .WithMany("Goals")
                        .HasForeignKey("TaskId");

                    b.Navigation("Proficiency");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Class13.Domain.MilestonesE", b =>
                {
                    b.HasOne("Class13.Domain.GoalsE", "Goal")
                        .WithMany("Milestones")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("Class13.Domain.TaskE", b =>
                {
                    b.HasOne("Class13.Domain.UsersE", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Class13.Domain.GoalsE", b =>
                {
                    b.Navigation("Milestones");
                });

            modelBuilder.Entity("Class13.Domain.ProficienciesE", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("Class13.Domain.TaskE", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("Class13.Domain.UsersE", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
